<Window x:Class="IS_Notification.View.Main_View"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="ИС Оповещения" Height="300" Width="300" WindowState="Maximized"
        Icon="..\bulb-lamp-torch-light-512.ico">
    <DockPanel  LastChildFill="True">
        <Grid DockPanel.Dock="Top" >
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                </Grid.RowDefinitions>
                <Menu Grid.Column="0" Grid.Row="0">
                    <MenuItem Header="Файл">
                        <MenuItem Command="{Binding Path=new_card}" Header="Новая карточка"></MenuItem>
                        <MenuItem IsEnabled="{Binding Path=role.Admin}" Command="{Binding Path=receive}" Header="Рассылка"></MenuItem>
                    </MenuItem>
                    <MenuItem Header="Редактировать">
                        <MenuItem  Command="{Binding Path=editPerson}" Header="Добавление пользователя"></MenuItem>
                        <Separator></Separator>
                        <MenuItem IsEnabled="{Binding Path=role.Redact}" Command="{Binding Path=editAgents}" Header="Предприятия/должностные лица"/>
                    </MenuItem>
                    <MenuItem Header="Администрирование">
                        <MenuItem IsEnabled="{Binding Path=role.Admin}" Command="{Binding Path=edit_history}" Header="История"></MenuItem>
                        <Separator></Separator>
                        <MenuItem IsEnabled="{Binding Path=role.Admin}" Command="{Binding Path=editRole}" Header="Роли"/>
                    </MenuItem>
                </Menu>
                <Border  Margin="5" Grid.Row="1" 
        BorderBrush="#FF9595FF" 
        BorderThickness="1">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF6CD8FB" Offset="0"/>
                            <GradientStop Color="#FFF7F7F7" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <StackPanel Orientation="Horizontal" >
                        <Button Command="{Binding Path=new_card}" IsEnabled="{Binding Path=role.Redact}" Height="20" Margin="10,0,10,0" Padding="5,0,5,0" Grid.Column="1" Content="Создание новой карточки" />
                        <Button Command="{Binding Path=refresh}" Height="20" Margin="10,0,10,0" Grid.Column="1" Content="Обновить список" Padding="5,0,5,0"/>
                        <Button Command="{Binding Path=delete}"  IsEnabled="{Binding Path=role.Redact}" Height="20" Margin="10,0,10,0" Grid.Column="1" Padding="5,0,5,0" Content="Удалить карточку"/>
                        <TextBlock Text="Выберите подразделение/должность:" Margin="10,0,10,0" Padding="5,0,5,0"/>
                        <ComboBox Text="--" Width="150" 
                              SelectedValue="{Binding Path=selected_unit}" 
                              DisplayMemberPath="Name"
                              SelectedValuePath="Name"
                              ItemsSource="{Binding Path=unit_filter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                              Margin="10,0,10,0"/>
                        <TextBlock Text="Поиск по виду/номеру:" Margin="10,0,10,0"/>
                        <TextBox Width="250" Text="{Binding Path=view_filter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10,0,10,0"/>
                    </StackPanel>
                </Border>
            </Grid>
        </Grid>
        <StatusBar DockPanel.Dock="Bottom" Height="22" FlowDirection="RightToLeft">
            <!--<StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>-->

            <StatusBarItem   Grid.Column="1" HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Path=person.Domen_name}"/>
                    <TextBlock Text=" :Пользователь "></TextBlock>
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem  Grid.Column="2" HorizontalAlignment="Left">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Path=role.Role_name}"/>
                    <TextBlock Text=" :Роль "></TextBlock>
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem  Grid.Column="0"   HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    <TextBlock></TextBlock>
                    <TextBlock Text="{Binding Path=selectedCard.N_protocol,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
        <DataGrid Height="Auto" IsReadOnly="True"  ItemsSource="{Binding Path=cv}" SelectedItem="{Binding Path=selectedCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  AutoGenerateColumns="False">
            <DataGrid.InputBindings>
                <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding edit_card}"/>
            </DataGrid.InputBindings>
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Is_wrong}" Value="Просрочен">
                            <Setter Property="Background" >
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="#FFF7E0E0" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Is_wrong}" Value="Не просрочен">
                            <Setter Property="Background" >
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="#FFE6FFE6" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=Status_execution}" Value="Выполнено"/>
                                <Condition Binding="{Binding Path=Status_control}" Value="Выполнено"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" >
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="#FFB6ECFB" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander IsExpanded="True" Background="White" Foreground="Black">
                                            <Expander.Header>
                                                <TextBlock Text="{Binding Path=Name}"/>
                                            </Expander.Header>
                                            <ItemsPresenter/>
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                    <GroupStyle.Panel>
                        <ItemsPanelTemplate>
                            <DataGridRowsPresenter/>
                        </ItemsPanelTemplate>
                    </GroupStyle.Panel>
                </GroupStyle>
            </DataGrid.GroupStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Вид документа" IsReadOnly="True" Binding="{Binding Path=Card_type}" Width="auto" />
                <DataGridTextColumn Header="Номер документа" IsReadOnly="True" Binding="{Binding Path=N_protocol}" Width="auto" MaxWidth="150">
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                            <Setter Property="TextBlock.TextAlignment" Value="Left"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Дата создания документа" IsReadOnly="True" Binding="{Binding Path=Dates}" Width="auto"/>
                <DataGridTextColumn Header="Подразделение/должность" IsReadOnly="True" Binding="{Binding Path=Unit_name}" Width="auto" MaxWidth="250">
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                            <Setter Property="TextBlock.TextAlignment" Value="Left"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTemplateColumn Header="Вид действия" IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Margin ="5,0,5,0" Text="{Binding Path=stat.Exec}"  HorizontalAlignment="Left" IsEnabled="False"/>
                                <TextBlock Margin ="5,0,5,0" Text="{Binding Path=stat.Cntrl}" HorizontalAlignment="Left" IsEnabled="False"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Контрольные даты" IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Margin ="5,0,5,0" Text="{Binding Path=Date_executions}" HorizontalAlignment="Center" IsEnabled="False"/>
                                <TextBlock Margin ="5,0,5,0" Text="{Binding Path=Date_controls}" HorizontalAlignment="Center" IsEnabled="False"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Статус" IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Margin ="5,0,5,0" Text="{Binding Path=Status_execution}" HorizontalAlignment="Left" IsEnabled="False"/>
                                <TextBlock Margin ="5,0,5,0" Text="{Binding Path=Status_control}" HorizontalAlignment="Left" IsEnabled="False"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Просрочен" IsReadOnly="True" Binding="{Binding Path=Is_wrong}" Width="auto"/>
                <DataGridCheckBoxColumn Header="Уведомление высшего руководства" IsReadOnly="True"  Binding="{Binding Path=Is_top}"/>
                <!--<DataGridTextColumn Header="Уведомление высшего руководства" IsReadOnly="True" Binding="{Binding Path=Is_top}" Width="*"/>-->
                <!--<DataGridTemplateColumn Header="Уведомление высшего руководства" IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                             <CheckBox IsChecked="{Binding Path=Is_top}" HorizontalAlignment="Center" IsEnabled="False"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>-->
            </DataGrid.Columns>
        </DataGrid>

    </DockPanel>
</Window>
